#include<bits/stdc++.h>
string serializeTree(TreeNode<int> *root)
{
 //    Write your code here for serializing the tree
 string str;
 if(root == NULL) return "";
 queue<TreeNode<int>*> q;
 q.push(root);
 while(!q.empty()){
     TreeNode<int>*curr=q.front();
     q.pop();
     if(curr==NULL){
        str.append("#,");
     } else {
       str.append(to_string(curr->data) + ',');
     }
     if (curr != NULL) {
       q.push(curr->left);
       q.push(curr->right);
     }
  }
return str;
}

TreeNode<int>* deserializeTree(string &data)
{
  if(data.size() == 0) return NULL;
  stringstream s(data);
  string str;
  getline(s, str, ',');
  TreeNode<int>* root = new TreeNode<int>(stoi(str));
  queue<TreeNode<int>*> q;
  q.push(root);
  while(!q.empty()){
      TreeNode<int>* curr = q.front();
      q.pop();
      getline(s,str,',');
      if(str=="#"){
          curr->left=NULL;
      }else{
          TreeNode<int>* left=new TreeNode<int>(stoi(str));
          curr->left=left;
          q.push(left);
      }
      getline(s,str,',');
      if(str=="#"){
          curr->right=NULL;
      }else{
          TreeNode<int>* right=new TreeNode<int>(stoi(str));
          curr->right=right;
          q.push(right);
      }
  }
  return root;
}
