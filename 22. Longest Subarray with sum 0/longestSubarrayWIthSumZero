public class Solution {

	public static int LongestSubsetWithZeroSum(ArrayList<Integer> arr) {

		// Write your code here.
		// Brute force TC-> O(n^2) SC -> O(n)
		// int n = arr.size();
		// int  max = 0;
		// for(int i = 0; i < n; ++i){
		// 	int sum = 0;
		// 	for(int j = i; j < n; ++j){
		// 		sum += arr.get(j);
		// 		if(sum == 0){
		// 			max = Math.max(max, j-i+1);
		// 		}
		// 	}
		// }
		// return max;

		// optimal approach tc-> O(n) sc->O(n)
		int n = arr.size();
		HashMap<Integer, Integer> map = new HashMap<>();
		int maxSub = 0;
		int sum =0;
		for(int i=0; i<n; i++){
			sum += arr.get(i);
			if(sum == 0) {
				maxSub = i+1;
			}
			else{
				if(map.get(sum) != null) {
					maxSub = Math.max(maxSub, i-map.get(sum));
				}
				else{
					map.put(sum, i);
				}
			}
		}
		return maxSub;
	}
}
